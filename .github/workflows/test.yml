---
name: Tests
on:
  push:
  pull_request:
    branches:
      - master

jobs:
  # Quick check so we don't waste minutes if there's a Flake8 error
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-flake8-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-flake8-
            ${{ runner.os }}-
      - name: Install requirements
        run: pip install flake8 pycodestyle
      - name: Check syntax
        run: flake8

  test:
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        ckan-version: ["2.11", "2.10", 2.9]
        experimental: [false]
        include:
          - ckan-version: 'master'
            experimental: true  #master is unstable, good to know if we are compatible or not

    name: Test on CKAN ${{ matrix.ckan-version }}
    runs-on: ubuntu-latest
    container: drevops/ci-runner:23.12.0
    env:
      CKAN_VERSION: ${{ matrix.ckan-version }}

    steps:
      # Patch https://github.com/actions/runner/issues/863
      - name: Preserve $HOME set in the container
        run: echo HOME=/root >> "$GITHUB_ENV"

      - uses: actions/checkout@v4
        continue-on-error: ${{ matrix.experimental }}
        timeout-minutes: 2

      - name: Build
        continue-on-error: ${{ matrix.experimental }}
        run: bin/build.sh
        timeout-minutes: 15

      - name: Unit tests
        continue-on-error: ${{ matrix.experimental }}
        if: ${{ matrix.behave-tag == 'smoke' }}
        run: bin/test.sh
        timeout-minutes: 10

      - name: Scenario tests
        continue-on-error: ${{ matrix.experimental }}
        run: bin/test-bdd.sh
        timeout-minutes: 45

      - name: Retrieve logs
        if: always()
        run: bin/get-logs.sh
        continue-on-error: ${{ matrix.experimental }}
        timeout-minutes: 1

      - name: Retrieve results
        if: always()
        run: bin/process-artifacts.sh
        continue-on-error: ${{ matrix.experimental }}
        timeout-minutes: 1

      - name: Test Summary
        uses: test-summary/action@v2
        continue-on-error: ${{ matrix.experimental }}
        with:
          paths: "/tmp/artifacts/junit/*.xml"
        if: always()

      - name: Upload screenshots
        if: always()
        uses: actions/upload-artifact@v4
        continue-on-error: ${{ matrix.experimental }}
        with:
          name: CKAN ${{ matrix.ckan-version }} ${{ matrix.behave-tag }} screenshots
          path: /tmp/artifacts/behave/screenshots
        timeout-minutes: 1
